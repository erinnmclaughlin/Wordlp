@inject Game Game
@inject NavigationManager NavigationManager
@implements IDisposable

@if (IsActive)
{
    <div class="modal-background" @onclick="Close"></div>

    <div class="modal">
        <button class="close" type="button" @onclick="Close">
            <i class="fa-solid fa-close fa-xl" />
        </button>

        <div class="solution">@Word.Value</div>
        <div class="modal-content">
            <p>@Word.Description</p>
        </div>

        <GameOverButtons />
    </div>
}

@code {

    [Parameter, EditorRequired] public Word Word { get; set; } = null!;

    private bool IsActive { get; set; }

    public void Dispose()
    {
        Game.OnGameOver -= OnGameOver;
        Game.OnGameStart -= OnGameStart;
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    protected override void OnInitialized()
    {
        Game.OnGameOver += OnGameOver;
        Game.OnGameStart += OnGameStart;
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void Close() => IsActive = false;
    private void Show() => IsActive = true;

    private void OnGameOver(object? o, EventArgs e) => Show();
    private void OnGameStart(object? o, EventArgs e) => Close();
    private void OnLocationChanged(object? o, LocationChangedEventArgs e) => Close();
}
