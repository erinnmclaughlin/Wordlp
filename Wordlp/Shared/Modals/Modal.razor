<div class="modal-background @(IsActive ? "show" : "hide")" @onclick="Close" @onclick:stopPropagation="true"></div>

<div class="modal-container @(IsActive ? "show" : "hide")" @onclick="Close" @onclick:stopPropagation="true">
    <div class="modal">
        <div class="close">
            <button type="button" @onclick="Close">
                <i class="fa-solid fa-close fa-lg"></i>
            </button>
        </div>

        <CascadingValue Value="this">
            @ChildContent
        </CascadingValue>            
    </div>
</div>

@code {

    [Parameter] public bool IsActive { get; set; }
    [Parameter] public EventCallback<bool> IsActiveChanged { get; set; }

    [Parameter] public RenderFragment? ChildContent { get; set; }

    public async Task Close()
    {
        await IsActiveChanged.InvokeAsync(false);
    }
}