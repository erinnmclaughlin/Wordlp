@inject BrowserResizeService Browser
@inject PlayerHistoryService PlayerHistory
@implements IDisposable

<div class="history" style="height: @(Height)px; max-height: @(Height)px;">
    @foreach (var result in PreviousResults)
    {
        <div class="word known">
            <div class="letters">
                @foreach (var letter in result.Word.Value)
                {
                    <div>@letter</div>
                }
            </div>

            @if (!string.IsNullOrWhiteSpace(result.Word.Description))
            {
                 <div class="description">
                    @result.Word.Description
                </div>
            }
           
        </div>
    }
</div>


@code {

    private int Height { get; set; }

    private List<GameResult> PreviousResults { get; set; } = new();

    public void Dispose()
    {
        BrowserResizeService.OnResize -= ResetHeight;
        GC.SuppressFinalize(this);
    }

    protected override async Task OnInitializedAsync()
    {
        BrowserResizeService.OnResize += ResetHeight;

        PreviousResults = await PlayerHistory.GetHistory();
        Height = await Browser.GetInnerHeight();
    }

    private async Task ResetHeight()
    {
        Height = (await Browser.GetInnerHeight()) - 40 - 24;
        StateHasChanged();
    }
}