@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager NavigationManager
@implements IDisposable

<CascadingValue Value="CurrentPage">
    @ChildContent
</CascadingValue>

@code {

    [Parameter] public RenderFragment? ChildContent { get; set; }

    private AppPages CurrentPage { get; set; }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += OnLocationChanged;
    }


    private void OnLocationChanged(object? o, LocationChangedEventArgs e)
    {
        UpdateNavigation();
        StateHasChanged();
    }

    private void UpdateNavigation()
    {
        var values = QueryHelpers.ParseNullableQuery(NavigationManager.ToAbsoluteUri(NavigationManager.Uri).Query);

        if (values?.TryGetValue("page", out var value) != true)
        {
            CurrentPage = AppPages.Game;
            return;
        }

        CurrentPage = value.ToString().ToLower().Trim() switch
        {
            "history" => AppPages.History,
            _ => AppPages.Game
        };
    }
}