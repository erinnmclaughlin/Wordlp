@page "/"
@inject BrowserResizeService Browser
@inject DarkModeService DarkMode
@implements IDisposable

<div id="wordlp" class="@(DarkMode.IsEnabled ? "dark-mode" : "")">
    
    <GameHeader IsDarkMode="DarkMode.IsEnabled" OnToggleDarkMode="() => DarkMode.Toggle()" />

    <main style="height: @(Height)px; max-height: @(Height)px;">
        @if (CurrentPage == GamePages.Game)
        {
            <GameContainer />
        }
        else if (CurrentPage == GamePages.History)
        {
            <History />
        }
        else
        {
            <RedirectTo Uri="?" />
        }
    </main>

</div>


@code {

    [CascadingParameter] private GamePages CurrentPage { get; set; }

    private int Height { get; set; }

    public void Dispose()
    {
        BrowserResizeService.OnResize -= ResetHeight;
        GC.SuppressFinalize(this);
    }

    protected override async Task OnInitializedAsync()
    {
        BrowserResizeService.OnResize += ResetHeight;

        await ResetHeight();
        await DarkMode.InitializeAsync();
    }

    private async Task ResetHeight()
    {
        Height = (await Browser.GetInnerHeight()) - 40;
        StateHasChanged();
    }
    
}